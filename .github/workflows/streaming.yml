name: Streaming Deployment

on:
  push:
    branches:
      - master

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Docker
        uses: docker/setup-buildx-action@v2

      # 1. Postgres
      - name: Start Postgres
        run: |
          cd postgres
          docker compose -p postgres_streaming up -d --build

      # 2. Spark
      - name: Start Spark
        run: |
          cd spark
          docker compose -p spark_streaming up -d --build

      # 3. Mailhog
      - name: Start Mailhog
        run: |
          cd mailhog
          docker compose -p mailhog_streaming up -d --build

      # 4. Airflow
      - name: Start Airflow
        environment: airflow
        run: |
          cd airflow
          
          # Generate a temporary .env file
          echo "AIRFLOW_UID=${{ vars.AIRFLOW_UID }}" > .env
          echo "PG_HOST=${{ vars.PG_HOST }}" >> .env
          echo "PG_PORT=${{ vars.PG_PORT }}" >> .env
          echo "PG_DBNAME=${{ vars.PG_DBNAME }}" >> .env
          echo "PG_USER=${{ vars.PG_USER }}" >> .env
          echo "PG_PASSWORD=${{ secrets.PG_PASSWORD }}" >> .env
          echo "AIRFLOW_CONN_MY_POSTGRES=${{ vars.AIRFLOW_CONN_MY_POSTGRES }}" >> .env
          echo "SPARK_HOST=${{ vars.SPARK_HOST }}" >> .env
          echo "SPARK_PORT=${{ vars.SPARK_PORT }}" >> .env
          echo "SPARK_PARAM=${{ vars.SPARK_PARAM }}" >> .env
          echo "AIRFLOW_CONN_MY_SPARK=${{ vars.AIRFLOW_CONN_MY_SPARK }}" >> .env
          echo "SMTP_USER=${{ secrets.SMTP_USER }}" >> .env
          echo "SMTP_PASS=${{ secrets.SMTP_PASS }}" >> .env
          echo "SMTP_SERVER=${{ vars.SMTP_SERVER }}" >> .env
          echo "SMTP_PORT=${{ vars.SMTP_PORT }}" >> .env
          echo "RECEIVER=${{ vars.RECEIVER }}" >> .env
          
          docker compose -p airflow_streaming up -d --build

      # 5. Ingestion
      - name: Build & Run Ingestion
        environment: ingestion
        run: |
          cd ingestion
          
          # Generate a temporary .env file
          echo "HOST=${{ vars.HOST }}" > .env
          echo "PORT=${{ vars.PORT }}" >> .env
          echo "DBNAME=${{ vars.DBNAME }}" >> .env
          echo "USER=${{ vars.USER }}" >> .env
          echo "PASSWORD=${{ secrets.PASSWORD }}" >> .env
          
          docker build -t ingestion_streaming .
          docker run -d --name ingestion_streaming --network postgres_streaming_default --env-file .env ingestion_streaming
